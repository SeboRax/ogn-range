
// https://raw.githubusercontent.com/proj4js/mgrs/master/mgrs.js
/**
Copyright (c) 2012, Mike Adair, Richard Greenwood, Didier Richard, Stephen Irons, Olivier Terral, Calvin Metcalf

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
**/
var NUM_100K_SETS=6;var SET_ORIGIN_COLUMN_LETTERS="AJSAJS";var SET_ORIGIN_ROW_LETTERS="AFAFAF";var A=65;var I=73;var O=79;var V=86;var Z=90;forward=function(b,a){a=a||5;return encode(LLtoUTM({lat:b[1],lon:b[0]}),a)};inverse=function(a){var b=UTMtoLL(decode(a.toUpperCase()));return[b.left,b.bottom,b.right,b.top]};toPoint=function(b){var a=exports.inverse(b);return[(a[2]+a[0])/2,(a[3]+a[1])/2]};function degToRad(a){return(a*(Math.PI/180))}function radToDeg(a){return(180*(a/Math.PI))}function LLtoUTM(i){var l=i.lat;var t=i.lon;var r=6378137;var q=0.00669438;var h=0.9996;var o;var d;var f,e,k,m,g;var j=degToRad(l);var p=degToRad(t);var s;var n;n=Math.floor((t+180)/6)+1;if(t===180){n=60}if(l>=56&&l<64&&t>=3&&t<12){n=32}if(l>=72&&l<84){if(t>=0&&t<9){n=31}else{if(t>=9&&t<21){n=33}else{if(t>=21&&t<33){n=35}else{if(t>=33&&t<42){n=37}}}}}o=(n-1)*6-180+3;s=degToRad(o);d=(q)/(1-q);f=r/Math.sqrt(1-q*Math.sin(j)*Math.sin(j));e=Math.tan(j)*Math.tan(j);k=d*Math.cos(j)*Math.cos(j);m=Math.cos(j)*(p-s);g=r*((1-q/4-3*q*q/64-5*q*q*q/256)*j-(3*q/8+3*q*q/32+45*q*q*q/1024)*Math.sin(2*j)+(15*q*q/256+45*q*q*q/1024)*Math.sin(4*j)-(35*q*q*q/3072)*Math.sin(6*j));var c=(h*f*(m+(1-e+k)*m*m*m/6+(5-18*e+e*e+72*k-58*d)*m*m*m*m*m/120)+500000);var b=(h*(g+f*Math.tan(j)*(m*m/2+(5-e+9*k+4*k*k)*m*m*m*m/24+(61-58*e+e*e+600*k-330*d)*m*m*m*m*m*m/720)));if(l<0){b+=10000000}return{northing:Math.round(b),easting:Math.round(c),zoneNumber:n,zoneLetter:getLetterDesignator(l)}}function UTMtoLL(B){var b=B.northing;var d=B.easting;var c=B.zoneLetter;var g=B.zoneNumber;if(g<0||g>60){return null}var k=0.9996;var C=6378137;var w=0.00669438;var e;var i=(1-Math.sqrt(1-w))/(1+Math.sqrt(1-w));var o,p,u,z,q,j;var t;var r,v;var m=d-500000;var l=b;if(c<"N"){l-=10000000}t=(g-1)*6-180+3;e=(w)/(1-w);j=l/k;r=j/(C*(1-w/4-3*w*w/64-5*w*w*w/256));v=r+(3*i/2-27*i*i*i/32)*Math.sin(2*r)+(21*i*i/16-55*i*i*i*i/32)*Math.sin(4*r)+(151*i*i*i/96)*Math.sin(6*r);o=C/Math.sqrt(1-w*Math.sin(v)*Math.sin(v));p=Math.tan(v)*Math.tan(v);u=e*Math.cos(v)*Math.cos(v);z=C*(1-w)/Math.pow(1-w*Math.sin(v)*Math.sin(v),1.5);q=m/(o*k);var h=v-(o*Math.tan(v)/z)*(q*q/2-(5+3*p+10*u-4*u*u-9*e)*q*q*q*q/24+(61+90*p+298*u+45*p*p-252*e-3*u*u)*q*q*q*q*q*q/720);h=radToDeg(h);var f=(q-(1+2*p+u)*q*q*q/6+(5-2*u+28*p-3*u*u+8*e+24*p*p)*q*q*q*q*q/120)/Math.cos(v);f=t+radToDeg(f);var n;if(B.accuracy){var s=UTMtoLL({northing:B.northing+B.accuracy,easting:B.easting+B.accuracy,zoneLetter:B.zoneLetter,zoneNumber:B.zoneNumber});n={top:s.lat,right:s.lon,bottom:h,left:f}}else{n={lat:h,lon:f}}return n}function getLetterDesignator(a){var b="Z";if((84>=a)&&(a>=72)){b="X"}else{if((72>a)&&(a>=64)){b="W"}else{if((64>a)&&(a>=56)){b="V"}else{if((56>a)&&(a>=48)){b="U"}else{if((48>a)&&(a>=40)){b="T"}else{if((40>a)&&(a>=32)){b="S"}else{if((32>a)&&(a>=24)){b="R"}else{if((24>a)&&(a>=16)){b="Q"}else{if((16>a)&&(a>=8)){b="P"}else{if((8>a)&&(a>=0)){b="N"}else{if((0>a)&&(a>=-8)){b="M"}else{if((-8>a)&&(a>=-16)){b="L"}else{if((-16>a)&&(a>=-24)){b="K"}else{if((-24>a)&&(a>=-32)){b="J"}else{if((-32>a)&&(a>=-40)){b="H"}else{if((-40>a)&&(a>=-48)){b="G"}else{if((-48>a)&&(a>=-56)){b="F"}else{if((-56>a)&&(a>=-64)){b="E"}else{if((-64>a)&&(a>=-72)){b="D"}else{if((-72>a)&&(a>=-80)){b="C"}}}}}}}}}}}}}}}}}}}}return b}function encode(a,c){var d=""+a.easting,b=""+a.northing;return a.zoneNumber+a.zoneLetter+get100kID(a.easting,a.northing,a.zoneNumber)+d.substr(d.length-5,c)+b.substr(b.length-5,c)}function get100kID(f,e,d){var a=get100kSetForZone(d);var b=Math.floor(f/100000);var c=Math.floor(e/100000)%20;return getLetter100kID(b,c,a)}function get100kSetForZone(b){var a=b%NUM_100K_SETS;if(a===0){a=NUM_100K_SETS}return a}function getLetter100kID(c,j,d){var f=d-1;var e=SET_ORIGIN_COLUMN_LETTERS.charCodeAt(f);var h=SET_ORIGIN_ROW_LETTERS.charCodeAt(f);var a=e+c-1;var g=h+j;var i=false;if(a>Z){a=a-Z+A-1;i=true}if(a===I||(e<I&&a>I)||((a>I||e<I)&&i)){a++}if(a===O||(e<O&&a>O)||((a>O||e<O)&&i)){a++;if(a===I){a++}}if(a>Z){a=a-Z+A-1}if(g>V){g=g-V+A-1;i=true}else{i=false}if(((g===I)||((h<I)&&(g>I)))||(((g>I)||(h<I))&&i)){g++}if(((g===O)||((h<O)&&(g>O)))||(((g>O)||(h<O))&&i)){g++;if(g===I){g++}}if(g>V){g=g-V+A-1}var b=String.fromCharCode(a)+String.fromCharCode(g);return b}function decode(n){if(n&&n.length===0){throw ("MGRSPoint coverting from nothing")}var d=n.length;var a=null;var b="";var e;var q=0;while(!(/[A-Z]/).test(e=n.charAt(q))){if(q>=2){throw ("MGRSPoint bad conversion from: "+n)}b+=e;q++}var f=parseInt(b,10);if(q===0||q+3>d){throw ("MGRSPoint bad conversion from: "+n)}var c=n.charAt(q++);if(c<="A"||c==="B"||c==="Y"||c>="Z"||c==="I"||c==="O"){throw ("MGRSPoint zone letter "+c+" not handled: "+n)}a=n.substring(q,q+=2);var m=get100kSetForZone(f);var h=getEastingFromChar(a.charAt(0),m);var j=getNorthingFromChar(a.charAt(1),m);while(j<getMinNorthing(c)){j+=2000000}var l=d-q;if(l%2!==0){throw ("MGRSPoint has to have an even number \nof digits after the zone letter and two 100km letters - front \nhalf for easting meters, second half for \nnorthing meters"+n)}var o=l/2;var u=0;var s=0;var k=100000,t,g,r,p;if(o>0){k=100000/Math.pow(10,o);t=n.substring(q,q+o);u=parseFloat(t)*k;g=n.substring(q+o);s=parseFloat(g)*k}r=u+h;p=s+j;return{easting:r,northing:p,zoneLetter:c,zoneNumber:f,accuracy:k}}function getEastingFromChar(c,f){var d=SET_ORIGIN_COLUMN_LETTERS.charCodeAt(f-1);var a=100000;var b=false;while(d!==c.charCodeAt(0)){d++;if(d===I){d++}if(d===O){d++}if(d>Z){if(b){throw ("Bad character: "+c)}d=A;b=true}a+=100000}return a}function getNorthingFromChar(e,d){if(e>"V"){throw ("MGRSPoint given invalid Northing "+e)}var c=SET_ORIGIN_ROW_LETTERS.charCodeAt(d-1);var a=0;var b=false;while(c!==e.charCodeAt(0)){c++;if(c===I){c++}if(c===O){c++}if(c>V){if(b){throw ("Bad character: "+e)}c=A;b=true}a+=100000}return a}function getMinNorthing(a){var b;switch(a){case"C":b=1100000;break;case"D":b=2000000;break;case"E":b=2800000;break;case"F":b=3700000;break;case"G":b=4600000;break;case"H":b=5500000;break;case"J":b=6400000;break;case"K":b=7300000;break;case"L":b=8200000;break;case"M":b=9100000;break;case"N":b=0;break;case"P":b=800000;break;case"Q":b=1700000;break;case"R":b=2600000;break;case"S":b=3500000;break;case"T":b=4400000;break;case"U":b=5300000;break;case"V":b=6200000;break;case"W":b=7000000;break;case"X":b=7900000;break;default:b=-1}if(b>=0){return b}else{throw ("Invalid zone letter: "+a)}};
